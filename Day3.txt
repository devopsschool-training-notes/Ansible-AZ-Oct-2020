 - conditioning 
 - looping

 - template config work
 - Handlers
 
 - Multiple Playbook
 - Roles

------------------------FACT Variable------------------------
- fact of remote host
- SYSTEM - ENV of the host

Manually - 
	Module setup
Wheneven u run playbook - fact variable gathter auto.

============================================================
Conditioning and Looping with Playbook
============================================================
WHEN OS = ubuntu
	run APT module
When OS = RHEL
	run yum module
WHEN OS = WIndows
	run ps module

---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajesh Kumar"

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: httpd
      state: latest
    when: ( ansible_os_family == "RedHat" and ansible_system == "Linux")
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started
    when: 
      - ansible_os_family == "RedHat"
      - ansible_distribution_major_version == "7"
      - ansible_system == "Linux"
  - name: My Name is Equals to Rajesh Kumar
    debug:
      msg: "My Name is Equals to Rajesh Kumar"
    when: myname == "Rajesh Kumar"
  - name: Ansible print when ubuntu
    debug:
      msg: "I am ubuntu"
    when: ansible_os_family == "Debian"
  - name: My Name is not Equals to Rajesh Kumar
    debug:
      msg: "My Name is not Equals to Rajesh Kumar"
    when: myname != "Rajesh Kumar"


==========================================



---
- name: Update web servers
  hosts: web
  vars:
    listvar1:
      - 'a'
      - 'b'
      - 'c'

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: "{{ item }}"
      state: latest
    with_items:
      - git
      - httpd
      - ntp
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started
  - command: echo {{ item }}
    loop: [ 0, 2, 4, 6, 8, 10 ]
  - command: echo {{ item }}
    loop: [ 0, 2, 4, 6, 8, 10 ]
    when: item > 5
  - name: Remove users Chuck and Craig from the system.
    user:
      name: "{{ item }}"
      state: absent
      remove: yes
    with_items:
      - chuck
      - craig
  - shell: echo "nested test a={{ item[0] }} b={{ item[1] }} c={{ item[2] }}"
    with_nested:
      - [ 'red', 'blue', 'green' ]
      - [ 1, 2, 3 ]
      - [ 'up', 'down', 'strange']
  - shell: echo "nested test a={{ item[0] }} b={{ item[1] }}"
    with_nested:
     - listvar1
     - [ 1, 2, 3 ]
=============================================================================================
 - template config work
 - Handlers
===========================================================================================
Qs - 
Decalaring vars in
- playbook
- inventory
- commands
---------------------
- Using it in playbook Tasks


Ansible Template and Handlers explained with Example

We can declare variables in 
- playbook
- inventory
- commands

Which can be used & Intropolate only in playbook Tasks but not in the files used in playbook.

Solution: Template
Using Template module you can Intropolate vars mentioned in the files used in playbook.

Rule for using template Module
- A file must be .j2 ext
- Must use a module call "template"


---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajesh Kumar"

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: httpd
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Template index.html
    template:
      src: index.html.j2
      dest: /var/www/html/index-template.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started

=================================

Project Requirement
- When you Change APACHE STATIC HTML Content -> HTTPD restart is not required
- When you Change APACHE Conf -> HTTPD restart is not required
- HTTP should be run 90
- No restart should be done on STATIC
- Restart must be done at conf changes


---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajesh Kumar"
    httpport: 8090

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: httpd
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started
  - name: stopped a Apache Server
    ansible.builtin.service:
      name: httpd
      state: stopped
  - name: Template for httpd.conf
    template:
      src: httpd.conf.j2
      dest: /etc/httpd/conf/httpd.conf
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started

======================================================================================
Problems
- No change in config file but STOP and START happening

Solution 
- Handlers

What is Handlers?
- A section is plyabook similar to tasks section
- It contains multiple task similar to tasks section
- The Handler task would execute when you call from tasks's task
- BUT one condition - ONLY when calling tasks's task is CHANGED == TRUE

---
- name: Update web servers
  hosts: web
  vars:
    myname: "Rajesh Kumar"
    httpport: 8090

  tasks:
  - name: Install Apache in centos7
    ansible.builtin.yum:
      name: httpd
      state: latest
  - name: Copy index.html
    ansible.builtin.copy:
      src: index.html
      dest: /var/www/html/index.html
  - name: Starting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: started
  - name: Template for httpd.conf
    template:
      src: httpd.conf.j2
      dest: /etc/httpd/conf/httpd.conf
    notify:
      - ReStarting a Apache Server

  handlers:
  - name: ReStarting a Apache Server
    ansible.builtin.service:
      name: httpd
      state: restarted
=====================================================================================
=====================================================================================
Managing 
- Playbook(S)
- Variable(S)
- Template
- file
- Handlers
==========================
How to give a right strcuture?
	- Easy to share - run - debug - documents
	- Best practices

==========================================
https://www.devopsschool.com/blog/ansible-include-scnario-with-list-of-plays-or-tasks/

Solutuion - Role
---------------------------
its a dire strcuture to Manage 
- Playbook(S) - TASK(S)
- Variable(S)
- Template(S)
- file(S)
- Handlers(S)

How to create a role?

ansible-galaxy


ansible-galaxy role init web



├── web
│   ├── defaults		# for default vars
│   │   └── main.yml
│   ├── files			# files used in tasks
│   ├── handlers		# Handlers tasks
│   │   └── main.yml
│   ├── meta			META INFO OF ROLE
│   │   └── main.yml
│   ├── README.md
│   ├── tasks			# for Tasks
│   │   └── main.yml
│   ├── templates		# Templates used in tasks	
│   ├── tests
│   │   ├── inventory
│   │   └── test.yml
│   └── vars			# for vars
│       └── main.yml


How to call role?
=================================

---
- name: Calling a role
  hosts: web
  roles:
    - web
    - db

ansible-playbook -i inventory site.yaml

 1118  java
 1119  ansible-galaxy install geerlingguy.java
 1120  ls
 1121  cd /home/azureuser/.ansible/roles
 1122  ls
 1123  tree
 1124  clear
 1125  ls
 1126  cd -
 1127  ls
 1128  vi site.yaml
 1129  ansible-playbook -i inventory site.yaml
 1130  java
 1131  history


LAB - 15 mins

Project - 1 HOUR https://www.devopsschool.com/blog/ansible-role-project-1/






























